[data]

# define the categories of data defined in 'type'
column = [
    
    # 'ntv_type' is the type of the data 
    "ntv_type", 
    
    # 'name_type' is the data added to the Series name
    "name_type", 
    
    # 'dtype' is used to define the dtype of the Series, if 'null' pandas choose the dtype
    "dtype"]

# define the types with a pandas conversion
type   = [

    # without ntv_type 
    #     dtype : 'int64', 'float64', 'boolean', 
    #             'object (json-array, json-object)'
    ["",		    null,       null                ],

    # with ntv_type only in json data (not numbers)    
    ["duration",	null,	    "timedelta64[ns]"   ],
    ["datetime",	null,	    "datetime64[ns]"    ],
    ["string",	    null,	    "string"            ],
    ["json",	    null, 	    null                ],

    # with ntv_type only in json data (numbers)    
    ["float16",	    null,	    "Float16"           ],
    ["float32",	    null,	    "Float32"           ],
    ["uint8",	    null,	    "UInt8"             ],
    ["uint16",	    null,	    "UInt16"            ],
    ["uint32",	    null,	    "UInt32"            ],
    ["uint64",	    null, 	    "UInt64"            ],
    ["int8",	    null,	    "Int8"              ],
    ["int16",	    null,	    "Int16"             ],
    ["int32",	    null,	    "Int32"             ],

    # with ntv_type in Series name and in json data (numbers)
    ["int",	        "int",	    "Int64"             ],
    ["float",	    "float",	"Float64"           ],
    ["number",	    "number",	"Float64"           ],
    ["int64",       "int64",	"Int64"             ],
    ["float64",	    "float64",	"Float64"           ],
    ["boolean",	    "boolean",	"boolean"           ],

    # with ntv_type in Series name and in json data (not numbers)
    ["array",	    "array",	"object"            ],
    ["object",	    "object",	"object"            ],
    ["null",	    "null", 	"object"            ],
    ["period",	    "period",	"string"            ],
    ["uri",	        "uri",	    "string"            ],
    ["email",	    "email",	"string"            ],
    ["file",	    "file",	    "string"            ],

    # with ntv_type converted in object dtype
    ["date",	    "date",	    "object"            ], 
    ["time",	    "time",	    "object"            ],
    ["point",	    "point",	"object"            ],
    ["line",	    "line",	    "object"            ],
    ["polygon",	    "polygon",	"object"            ],
    ["geometry",    "geometry",	"object"            ],
    ["geojson",	    "geojson",	"object"            ],

    # with ntv_type unknown in pandas
    ["month",	    "month",	null                ],
    ["year",	    "year",	    null                ],
    ["day",	        "day",	    null                ],
    ["wday",	    "wday",	    null                ],
    ["yday",	    "yday",	    null                ],
    ["week",	    "week",	    null                ],
    ["hour",	    "hour",	    null                ],
    ["minute",	    "minute",	null                ],
    ["second",	    "second",	null                ]
    ]

# define the types with a NTV conversion ('othertype' is not used)
othertype = [
    ["dat",	            "dat",	        "object"    ],
    ["multipoint",	    "multipoint",   "object"    ],
    ["multiline",	    "multiline",    "object"    ],
    ["multipolygon",	"multipolygon",	"object"    ],
    ["box",	            "box",	        "object"    ],
    ["codeolc",	        "codeolc",	    "object"    ],
    ["row",	            "row",	        "object"    ],
    ["field",	        "field",	    "object"    ],
    ["tab",	            "tab",	        "object"    ],
    ["ntv",	            "ntv",	        "object"    ]
    ]

# define conversion between default dtype and alias dtype
astype = {

    # the 'value' is the alias dtype of the 'key' dtype
    "uint8":        "UInt8",
    "uint16":       "UInt16",
    "uint32":       "UInt32",
    "uint64":       "UInt64",
    "int8":         "Int8",
    "int16":        "Int16",
    "int32":        "Int32",
    "int64":        "Int64",
    "float16":      "Float16",
    "float32":      "Float32",
    "float64":      "Float64",
    "bool":         "boolean"
    }

# repace (\w+) -> "$1",